@go:package "internal";

service basic {
    aggregate;
    buildInfo;
    getLastError;
    isMaster;
}

command aggregate {
    request {
        databaseName $databaseName;

        pipeline bsoncore.Array;
    }

    response {
        ok int32;
        cursor cursorFirst;
    }
}

command buildInfo {
    @alias "buildinfo";

    response {
        ok int32;
        version string;
        versionArray []int32;
    }
}

command getLastError {
    request {
        connectionID $connectionID;
    }

    response {
        ok int32;
        writtenTo string;
        err string;
        syncMillis int32;
        n int32;
        connectionID int32;
    }
}

command isMaster {
    @alias "ismaster";

    request {
        compression []string;
    }
    
    response {
        ok int32;
        ismaster bool;
        maxBsonObjectSize int32;
        maxMessageSizeBytes int32;
        maxWriteBatchSize int32;
        logicalSessionTimeoutMinutes int32;
        minWireVersion int32;
        maxWireVersion int32;
        readOnly bool;
        compression []string;
    }
}

struct cursorFirst {
    firstBatch bsoncore.Array;
    id int64;
    ns string;
}

struct cursorNext {
    nextBatch bsoncore.Array;
    id int64;
    ns string;
}